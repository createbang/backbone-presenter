{
  "name": "model-presenter",
  "version": "0.1.0",
  "description": "Make your model data presentable.",
  "author": {
    "name": "Michael Phillips",
    "email": "mlp.brooklyn@gmail.com",
    "url": "http://createbang.com/"
  },
  "main": "lib/model-presenter.js",
  "dependencies": {
    "underscore": "1.5.2"
  },
  "devDependencies": {
    "mocha": "",
    "should": ""
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/createbang/model-presenter.git"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/*.js"
  },
  "bugs": {
    "url": "https://github.com/createbang/model-presenter/issues"
  },
  "readme": "# Model Presenter\n\n![https://travis-ci.org/createbang/model-presenter.png](https://travis-ci.org/createbang/model-presenter.png)\n\nA lightweight model wrapper to prepare your data for the view layer.\n\n## Example\n\n```js\nvar Presenter = require('model-presenter');\n\nvar PersonPresenter = Presenter.extend({\n\n  customAttributes: {\n    fullName: function() {\n      return this.attributes.firstName + ' ' + this.attributes.lastName;\n    },\n    fullNameAllCaps: function() {\n      return this.customAttribute('fullName').toUpperCase();\n    }\n  },\n\n  strategies: {\n    avatar: {\n      whitelist: ['image', 'username'],\n      customAttributes: ['fullNameAllCaps']\n    },\n    profile: {\n      blacklist: ['ssn'],\n      customAttributes: ['fullName']\n    },\n    chat: {\n      whitelist: ['image', 'username', 'memberSince']\n    }\n  }\n\n})\n\nvar person = {\n    image: 'image.jpeg',\n    username: 'createbang',\n    firstName: 'Michael',\n    lastName: 'Phillips',\n    ssn: '111-11-1111',\n    memberSince: '2013-01-01'\n};\n\nPersonPresenter.bind( person );\n\nperson.present() // returns full representation of object including custom attributes\nperson.present('avatar') // returns {image: 'image.jpeg', username: 'createbang', fullNameAllCaps: 'MICHAEL PHILLIPS'}\nperson.present('profile') // returns all model data except ssn and adds fullName custom attribute\nperson.present('chat') // returns just the whitelisted keys\n```\n\n\n\n## Installation\n\nvia npm\n\n```bash\n$ npm install model-presenter\n```\n\n## Presenter Properties\n\nPresenters constructors are defined as extensions of the base `Presenter` object, defining custom attributes or display strategies.\n\nPresenters have two primary properties:\n\n### customAttributes\n\nThe `customAttributes` property allows you to specify presentation-only model values.\n\nEach attribute is defined as a function.  The returned value will be used as the value of that attribute.  The scope for each function contains two properties:\n\n#### attributes\n\nsurfaces all properties of the native model (delegates to the `serializer` method, if defined, to generate values).\n\n#### customAttribute\n\nA function that allows access to other custom attributes.  Takes the name of the custom attribute as the argument.\n\n### strategies\n\nThe `strategies` object allows you to define specific representation strategies for the presenter.  This lets the developer define a presentation for the model once and easily use it elsewhere in the application.\n\nEach strategy accepts three properties:\n\n#### whitelist\n\nAn array of keys to pick from the original model data.\n\n#### blacklist\n\nAn array of keys to omit from the original model data.\n\n#### customAttributes\n\nAn array of custom attribute keys to add to the resulting object\n\n## Model\n\n### present\n\nBinding the presenter constructor to the model exposes a `present` method on the model.  This method returns the resulting presenter attributes.  Takes an optional `strategy` string argument, using that strategy to build the resulting object.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## Running tests\n\n```bash\n$ npm install\n$ npm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "model-presenter@0.1.0",
  "dist": {
    "shasum": "e65f6ab95183caa436d11e5e53d0a744747d6984"
  },
  "_from": "model-presenter@0.1.0",
  "_resolved": "https://registry.npmjs.org/model-presenter/-/model-presenter-0.1.0.tgz"
}
